/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tonikelope.coronapoker;

import java.awt.Dimension;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.WritableRaster;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.ImageIcon;

/**
 *
 * @author tonikelope
 */
public class Identicon extends javax.swing.JDialog {

    /**
     * Creates new form Identicon
     */
    public Identicon(java.awt.Frame parent, boolean modal, String nick, SecretKeySpec key) {
        super(parent, modal);

        try {
            MessageDigest md = MessageDigest.getInstance("MD5");

            String hash = Helpers.toHexString(md.digest(key.getEncoded()));

            Helpers.GUIRunAndWait(new Runnable() {
                public void run() {
                    initComponents();

                    setTitle("AES-KEY " + nick);

                    int SIZE = Math.round(parent.getHeight() * 0.3f);

                    while (SIZE % 5 != 0) {
                        SIZE--;
                    }

                    ImageIcon icon = new ImageIcon(generateIdenticon(hash, SIZE, SIZE));

                    setSize(new Dimension(icon.getIconWidth(), icon.getIconHeight()));

                    setPreferredSize(new Dimension(icon.getIconWidth(), icon.getIconHeight()));

                    icon_panel.setPreferredSize(new Dimension(icon.getIconWidth(), icon.getIconHeight()));

                    icon_label.setPreferredSize(new Dimension(icon.getIconWidth(), icon.getIconHeight()));

                    icon_label.setIcon(icon);
                }
            });
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(Identicon.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public static BufferedImage generateIdenticon(String text, int image_width, int image_height) {
        int width = 5, height = 5;

        byte[] hash = text.getBytes();

        BufferedImage identicon = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
        WritableRaster raster = identicon.getRaster();

        int[] background = new int[]{255, 255, 255, 0};
        int[] foreground = new int[]{hash[0] & 255, hash[1] & 255, hash[2] & 255, 255};

        for (int x = 0; x < width; x++) {
            //Enforce horizontal symmetry
            int i = x < 3 ? x : 4 - x;
            for (int y = 0; y < height; y++) {
                int[] pixelColor;
                //toggle pixels based on bit being on/off
                if ((hash[i] >> y & 1) == 1) {
                    pixelColor = foreground;
                } else {
                    pixelColor = background;
                }
                raster.setPixel(x, y, pixelColor);
            }
        }

        BufferedImage finalImage = new BufferedImage(image_width, image_height, BufferedImage.TYPE_INT_ARGB);

        //Scale image to the size you want
        AffineTransform at = new AffineTransform();
        at.scale(image_width / width, image_height / height);
        AffineTransformOp op = new AffineTransformOp(at, AffineTransformOp.TYPE_NEAREST_NEIGHBOR);
        finalImage = op.filter(identicon, finalImage);

        return finalImage;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        icon_panel = new javax.swing.JPanel();
        icon_label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("AES-KEY");
        setResizable(false);

        icon_panel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout icon_panelLayout = new javax.swing.GroupLayout(icon_panel);
        icon_panel.setLayout(icon_panelLayout);
        icon_panelLayout.setHorizontalGroup(
            icon_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(icon_label, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
        );
        icon_panelLayout.setVerticalGroup(
            icon_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(icon_label, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(icon_panel, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(icon_panel, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel icon_label;
    private javax.swing.JPanel icon_panel;
    // End of variables declaration//GEN-END:variables
}
