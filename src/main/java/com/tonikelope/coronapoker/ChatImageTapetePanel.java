/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.tonikelope.coronapoker;

import java.awt.Dimension;
import java.awt.Rectangle;
import java.util.concurrent.ConcurrentLinkedQueue;

/**
 *
 * @author tonikelope
 */
public class ChatImageTapetePanel extends javax.swing.JPanel implements ZoomableInterface {

    public final static int H = 60;

    /**
     * Creates new form ChatImageTapetePanel
     */
    public ChatImageTapetePanel() {
        initComponents();
        chat.setVisible(false);
        image.setVisible(false);

        Helpers.setScaledIconLabel(chat, getClass().getResource("/images/chat.png"), Math.round((1f + GameFrame.ZOOM_LEVEL * GameFrame.ZOOM_STEP) * H), Math.round((1f + GameFrame.ZOOM_LEVEL * GameFrame.ZOOM_STEP) * H));
        Helpers.setScaledIconLabel(image, getClass().getResource("/images/chat_image2.png"), Math.round((1f + GameFrame.ZOOM_LEVEL * GameFrame.ZOOM_STEP) * H), Math.round((1f + GameFrame.ZOOM_LEVEL * GameFrame.ZOOM_STEP) * H));
        setPreferredSize(new Dimension(Math.round((1f + GameFrame.ZOOM_LEVEL * GameFrame.ZOOM_STEP) * H) * 2, Math.round((1f + GameFrame.ZOOM_LEVEL * GameFrame.ZOOM_STEP) * H)));
        setSize(getPreferredSize());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chat = new javax.swing.JLabel();
        image = new javax.swing.JLabel();

        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setFocusable(false);
        setOpaque(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
        });

        chat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/chat.png"))); // NOI18N
        chat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        chat.setDoubleBuffered(true);
        chat.setFocusable(false);
        chat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chatMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                chatMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                chatMouseExited(evt);
            }
        });

        image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/chat_image2.png"))); // NOI18N
        image.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        image.setDoubleBuffered(true);
        image.setFocusable(false);
        image.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imageMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imageMouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(chat)
                .addGap(0, 0, 0)
                .addComponent(image))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(chat)
                .addComponent(image))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void imageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imageMouseClicked

        if (!GameFrame.getInstance().getCrupier().isFin_de_la_transmision()) {
            chat.setVisible(false);
            image.setVisible(false);

            GameFrame.getInstance().showFastChatImage();
        }

    }//GEN-LAST:event_imageMouseClicked

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        // TODO add your handling code here:
        if (!GameFrame.getInstance().getCrupier().isFin_de_la_transmision()) {
            chat.setVisible(true);
            image.setVisible(true);
        }
    }//GEN-LAST:event_formMouseEntered

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
        // TODO add your handling code here:
        if (!GameFrame.getInstance().getCrupier().isFin_de_la_transmision()) {
            Rectangle r = new Rectangle(this.getLocationOnScreen(), this.getSize());
            if (!r.contains(evt.getPoint())) {

                chat.setVisible(false);
                image.setVisible(false);
            }
        }

    }//GEN-LAST:event_formMouseExited

    private void chatMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chatMouseEntered
        // TODO add your handling code here:
        if (!GameFrame.getInstance().getCrupier().isFin_de_la_transmision()) {
            chat.setVisible(true);
            image.setVisible(true);
        }
    }//GEN-LAST:event_chatMouseEntered

    private void imageMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imageMouseEntered
        // TODO add your handling code here:
        if (!GameFrame.getInstance().getCrupier().isFin_de_la_transmision()) {
            chat.setVisible(true);
            image.setVisible(true);
        }
    }//GEN-LAST:event_imageMouseEntered

    private void imageMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imageMouseExited
        // TODO add your handling code here:
        if (!GameFrame.getInstance().getCrupier().isFin_de_la_transmision()) {
            Rectangle r = new Rectangle(this.getLocationOnScreen(), this.getSize());
            if (!r.contains(evt.getPoint())) {

                chat.setVisible(false);
                image.setVisible(false);
            }
        }
    }//GEN-LAST:event_imageMouseExited

    private void chatMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chatMouseExited
        // TODO add your handling code here:
        if (!GameFrame.getInstance().getCrupier().isFin_de_la_transmision()) {
            Rectangle r = new Rectangle(this.getLocationOnScreen(), this.getSize());
            if (!r.contains(evt.getPoint())) {

                chat.setVisible(false);
                image.setVisible(false);
            }
        }
    }//GEN-LAST:event_chatMouseExited

    private void chatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chatMouseClicked
        // TODO add your handling code here:
        if (!GameFrame.getInstance().getCrupier().isFin_de_la_transmision()) {
            chat.setVisible(false);
            image.setVisible(false);

            GameFrame.getInstance().showFastChatDialog();
        }
    }//GEN-LAST:event_chatMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel chat;
    private javax.swing.JLabel image;
    // End of variables declaration//GEN-END:variables

    @Override
    public void zoom(float factor, ConcurrentLinkedQueue<Long> notifier) {

        Helpers.setScaledIconLabel(chat, getClass().getResource("/images/chat.png"), Math.round(factor * H), Math.round(factor * H));
        Helpers.setScaledIconLabel(image, getClass().getResource("/images/chat_image2.png"), Math.round(factor * H), Math.round(factor * H));
        setPreferredSize(new Dimension(Math.round(factor * H) * 2, Math.round(factor * H)));
        setSize(getPreferredSize());
        setLocation(0, GameFrame.getInstance().getTapete().getHeight() - getHeight());

        if (notifier != null) {

            notifier.add(Thread.currentThread().getId());

            synchronized (notifier) {

                notifier.notifyAll();

            }
        }
    }
}
